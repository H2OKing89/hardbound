name: CI

on:
  push:
    branches: [ main, dev, master ]
  pull_request:
    branches: [ main, dev, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[testing]"

    - name: Run tests
      run: |
        python -m pytest tests/ --cov=hardbound --cov-report=term-missing --cov-fail-under=15

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[testing]"
        pip install flake8 black isort

    - name: Run linting
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 hardbound tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 hardbound tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check formatting
      run: |
        black --check hardbound tests
        isort --check-only hardbound tests

    - name: Check formatting
      run: |
        black --check hardbound tests
        isort --check-only hardbound tests
